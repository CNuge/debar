% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.r
\name{denoise}
\alias{denoise}
\alias{denoise.ccs_reads}
\title{Run the denoiser pipeline for a group of ccs reads.}
\usage{
denoise(x, ...)

\method{denoise}{ccs_reads}(x, ..., ambig_char = "N",
  censor_length = 3, to_file = TRUE, outformat = "fasta",
  filename = NULL, phred_placeholder = "#", aa_check = FALSE,
  trans_table = "auto", frame_offset = 0, append = TRUE)
}
\arguments{
\item{x}{a ccs_reads class object.}

\item{...}{additional arguments to be passed between methods.}

\item{ambig_char}{The character to use for ambigious positions in the sequence.}

\item{censor_length}{the number of base pairs in either direction of a PHMM correction
to convert to placeholder characters. Default is 3.}

\item{to_file}{Boolean indicating whether the consensus sequences should be written to a file. Default is TRUE.}

\item{outformat}{The format of the output file. Options are fasta (default) or fastq format.}

\item{filename}{The name of the file to output the data to. Default filenames are: denoised.fasta or denoised.fastq.}

\item{phred_placeholder}{The character to input for the phred score line. Default is '#'. Used with write_fastq only}

\item{aa_check}{Boolean indicating whether the amino acid sequence should be generated and assessed for each ccs read. Default = FALSE.}

\item{trans_table}{The translation table to use for translating from nucleotides to amino acids. Default is "auto", meaning
that the translation table will be inferred from the ccs_reads object's order. Used only when aa_check = TRUE.}

\item{frame_offset}{The offset to the reading frame to be applied for translation. By default the offset
is zero, so the first character in the framed sequence is considered the first nucelotide of the first codon.
Passing frame_offset = 1 would offset the sequence by one and therefore make the second character in the
framed sequence the the first nucelotide of the first codon. Used only when aa_check = TRUE.}

\item{append}{Should the ccs consensus sequence be appended to the output file?(TRUE) 
Or overwrite the file?(FALSE) Default is TRUE.}
}
\value{
a class object of code{"ccs_reads"}
}
\description{
Run the denoiser pipeline for a group of ccs reads.
}
\examples{
# construct the ccs_reads object
ex_data = build_ccs(ex_ccs_read_list, order = 'Diptera', id = 'SSGBC787-14')
# denoise the ccs_reads object
ex_data = denoise(ex_data)
}
\seealso{
\code{\link{build_ccs}}
}
